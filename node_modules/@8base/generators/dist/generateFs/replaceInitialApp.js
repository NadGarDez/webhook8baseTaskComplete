"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.replaceInitialApp = void 0;
var FS_NAMES = {
  APPLICATION_JS: 'src/Application.js',
  APPOLO_CONFIG_JS: 'apollo.config.js',
  EIGHT_BASE_YML: '.8base.yml',
  PACKAGE_JSON: 'package.json',
  PACKAGE_LOCK_JSON: 'package-lock.json'
};

var removePieceOfCode = function removePieceOfCode(code, pieceName) {
  var pieceStart = "\\/\\*\\*\\s*__".concat(pieceName, "_START__\\s*\\*\\/");
  var pieceEnd = "\\/\\*\\*\\s*__".concat(pieceName, "_END__\\s*\\*\\/");
  var regexp = new RegExp("".concat(pieceStart, "[\\s\\S]*").concat(pieceEnd), 'm');
  return code.replace(regexp, '');
};

var replaceInitialApp = function replaceInitialApp(fsObject, constants) {
  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    authMode: 'web'
  };
  var fsObjectReplaced = {};
  var isApiTokenMode = config.authMode === 'api-token';
  Object.keys(fsObject).forEach(function (filePath) {
    switch (filePath) {
      case FS_NAMES.APPLICATION_JS:
        {
          fsObjectReplaced[FS_NAMES.APPLICATION_JS] = isApiTokenMode ? fsObject[FS_NAMES.APPLICATION_JS] && removePieceOfCode(fsObject[FS_NAMES.APPLICATION_JS], 'AUTH_WEB').replace('__APP_API_TOKEN__', constants.apiToken || '').replace('__APP_API_ENDPOINT__', constants.endpoint || '') : fsObject[FS_NAMES.APPLICATION_JS] && removePieceOfCode(fsObject[FS_NAMES.APPLICATION_JS], 'AUTH_API_TOKEN').replace('__APP_API_ENDPOINT__', constants.endpoint || '').replace('__APP_AUTH_CLIENT_ID__', constants.authClientId || '').replace('__APP_AUTH_DOMAIN__', constants.authDomain || '');
          break;
        }

      case FS_NAMES.PACKAGE_JSON:
        {
          fsObjectReplaced[FS_NAMES.PACKAGE_JSON] = fsObject[FS_NAMES.PACKAGE_JSON] && fsObject[FS_NAMES.PACKAGE_JSON].replace(/"name": ".*"/, "\"name\": \"".concat(constants.appName, "\"")).replace(/"version": ".*"/, '"version": "1.0.0"');
          break;
        }

      case FS_NAMES.PACKAGE_LOCK_JSON:
        {
          fsObjectReplaced[FS_NAMES.PACKAGE_LOCK_JSON] = fsObject[FS_NAMES.PACKAGE_LOCK_JSON] && fsObject[FS_NAMES.PACKAGE_LOCK_JSON].replace(/"name": ".*"/, "\"name\": \"".concat(constants.appName, "\"")).replace(/"version": ".*"/, '"version": "1.0.0"');
          break;
        }

      default:
        {
          fsObjectReplaced[filePath] = fsObject[filePath] && fsObject[filePath].replace('__APP_API_ENDPOINT__', constants.endpoint || '').replace('__APP_AUTH_CLIENT_ID__', constants.authClientId || '').replace('__APP_AUTH_DOMAIN__', constants.authDomain || '').replace('__APP_NAME__', constants.appName || '');
          break;
        }
    }
  });
  fsObjectReplaced[FS_NAMES.EIGHT_BASE_YML] = "appName: ".concat(constants.appName);
  return fsObjectReplaced;
};

exports.replaceInitialApp = replaceInitialApp;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nZW5lcmF0ZUZzL3JlcGxhY2VJbml0aWFsQXBwLnRzIl0sIm5hbWVzIjpbIkZTX05BTUVTIiwiQVBQTElDQVRJT05fSlMiLCJBUFBPTE9fQ09ORklHX0pTIiwiRUlHSFRfQkFTRV9ZTUwiLCJQQUNLQUdFX0pTT04iLCJQQUNLQUdFX0xPQ0tfSlNPTiIsInJlbW92ZVBpZWNlT2ZDb2RlIiwiY29kZSIsInBpZWNlTmFtZSIsInBpZWNlU3RhcnQiLCJwaWVjZUVuZCIsInJlZ2V4cCIsIlJlZ0V4cCIsInJlcGxhY2UiLCJyZXBsYWNlSW5pdGlhbEFwcCIsImZzT2JqZWN0IiwiY29uc3RhbnRzIiwiY29uZmlnIiwiYXV0aE1vZGUiLCJmc09iamVjdFJlcGxhY2VkIiwiaXNBcGlUb2tlbk1vZGUiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImZpbGVQYXRoIiwiYXBpVG9rZW4iLCJlbmRwb2ludCIsImF1dGhDbGllbnRJZCIsImF1dGhEb21haW4iLCJhcHBOYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxJQUFNQSxRQUFRLEdBQUc7QUFDZkMsRUFBQUEsY0FBYyxFQUFFLG9CQUREO0FBRWZDLEVBQUFBLGdCQUFnQixFQUFFLGtCQUZIO0FBR2ZDLEVBQUFBLGNBQWMsRUFBRSxZQUhEO0FBSWZDLEVBQUFBLFlBQVksRUFBRSxjQUpDO0FBS2ZDLEVBQUFBLGlCQUFpQixFQUFFO0FBTEosQ0FBakI7O0FBb0JBLElBQU1DLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBb0IsQ0FBQ0MsSUFBRCxFQUFlQyxTQUFmLEVBQXFDO0FBQzdELE1BQU1DLFVBQVUsNEJBQXFCRCxTQUFyQix1QkFBaEI7QUFDQSxNQUFNRSxRQUFRLDRCQUFxQkYsU0FBckIscUJBQWQ7QUFFQSxNQUFNRyxNQUFNLEdBQUcsSUFBSUMsTUFBSixXQUFjSCxVQUFkLHNCQUFvQ0MsUUFBcEMsR0FBZ0QsR0FBaEQsQ0FBZjtBQUVBLFNBQU9ILElBQUksQ0FBQ00sT0FBTCxDQUFhRixN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LGNBSndDLEVBSXhCRyxTQUFTLENBQUNhLE9BQVYsSUFBcUIsRUFKRyxDQUFuRDtBQU1BO0FBQ0Q7QUF4Q0g7QUEyQ0QsR0E1Q0Q7QUE4Q0FWLEVBQUFBLGdCQUFnQixDQUFDbkIsUUFBUSxDQUFDRyxjQUFWLENBQWhCLHNCQUF3RGEsU0FBUyxDQUFDYSxPQUFsRTtBQUVBLFNBQU9WLGdCQUFQO0FBQ0QsQ0F6RE0iLCJzb3VyY2VzQ29udGVudCI6WyJcbmNvbnN0IEZTX05BTUVTID0ge1xuICBBUFBMSUNBVElPTl9KUzogJ3NyYy9BcHBsaWNhdGlvbi5qcycsXG4gIEFQUE9MT19DT05GSUdfSlM6ICdhcG9sbG8uY29uZmlnLmpzJyxcbiAgRUlHSFRfQkFTRV9ZTUw6ICcuOGJhc2UueW1sJyxcbiAgUEFDS0FHRV9KU09OOiAncGFja2FnZS5qc29uJyxcbiAgUEFDS0FHRV9MT0NLX0pTT046ICdwYWNrYWdlLWxvY2suanNvbicsXG59O1xuXG5pbnRlcmZhY2UgSUFwcEZzIHtcbiAgW3BhdGg6IHN0cmluZ106IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIElBcHBGc0NvbnN0YW50cyB7XG4gIGVuZHBvaW50Pzogc3RyaW5nO1xuICBhdXRoQ2xpZW50SWQ/OiBzdHJpbmc7XG4gIGF1dGhEb21haW4/OiBzdHJpbmc7XG4gIGFwaVRva2VuPzogc3RyaW5nO1xuICBhcHBOYW1lOiBzdHJpbmc7XG59XG5cbmNvbnN0IHJlbW92ZVBpZWNlT2ZDb2RlID0gKGNvZGU6IHN0cmluZywgcGllY2VOYW1lOiBzdHJpbmcpID0+IHtcbiAgY29uc3QgcGllY2VTdGFydCA9IGBcXFxcL1xcXFwqXFxcXCpcXFxccypfXyR7cGllY2VOYW1lfV9TVEFSVF9fXFxcXHMqXFxcXCpcXFxcL2A7XG4gIGNvbnN0IHBpZWNlRW5kID0gYFxcXFwvXFxcXCpcXFxcKlxcXFxzKl9fJHtwaWVjZU5hbWV9X0VORF9fXFxcXHMqXFxcXCpcXFxcL2A7XG5cbiAgY29uc3QgcmVnZXhwID0gbmV3IFJlZ0V4cChgJHtwaWVjZVN0YXJ0fVtcXFxcc1xcXFxTXSoke3BpZWNlRW5kfWAsICdtJyk7XG5cbiAgcmV0dXJuIGNvZGUucmVwbGFjZShyZWdleHAsICcnKTtcbn07XG5cbmV4cG9ydCBjb25zdCByZXBsYWNlSW5pdGlhbEFwcCA9IChcbiAgZnNPYmplY3Q6IElBcHBGcyxcbiAgY29uc3RhbnRzOiBJQXBwRnNDb25zdGFudHMsXG4gIGNvbmZpZzogeyBhdXRoTW9kZTogJ3dlYicgfCAnYXBpLXRva2VuJyxcbn0gPSB7IGF1dGhNb2RlOiAnd2ViJyB9KTogSUFwcEZzID0+IHtcbiAgY29uc3QgZnNPYmplY3RSZXBsYWNlZDogSUFwcEZzID0ge307XG4gIGNvbnN0IGlzQXBpVG9rZW5Nb2RlID0gY29uZmlnLmF1dGhNb2RlID09PSAnYXBpLXRva2VuJztcblxuICBPYmplY3Qua2V5cyhmc09iamVjdCkuZm9yRWFjaCgoZmlsZVBhdGgpID0+IHtcbiAgICBzd2l0Y2ggKGZpbGVQYXRoKSB7XG4gICAgICBjYXNlIEZTX05BTUVTLkFQUExJQ0FUSU9OX0pTOiB7XG4gICAgICAgIGZzT2JqZWN0UmVwbGFjZWRbRlNfTkFNRVMuQVBQTElDQVRJT05fSlNdID0gaXNBcGlUb2tlbk1vZGVcbiAgICAgICAgICA/IGZzT2JqZWN0W0ZTX05BTUVTLkFQUExJQ0FUSU9OX0pTXSAmJiByZW1vdmVQaWVjZU9mQ29kZShmc09iamVjdFtGU19OQU1FUy5BUFBMSUNBVElPTl9KU10sICdBVVRIX1dFQicpXG4gICAgICAgICAgICAucmVwbGFjZSgnX19BUFBfQVBJX1RPS0VOX18nLCBjb25zdGFudHMuYXBpVG9rZW4gfHwgJycpXG4gICAgICAgICAgICAucmVwbGFjZSgnX19BUFBfQVBJX0VORFBPSU5UX18nLCBjb25zdGFudHMuZW5kcG9pbnQgfHwgJycpXG5cbiAgICAgICAgICA6IGZzT2JqZWN0W0ZTX05BTUVTLkFQUExJQ0FUSU9OX0pTXSAmJiByZW1vdmVQaWVjZU9mQ29kZShmc09iamVjdFtGU19OQU1FUy5BUFBMSUNBVElPTl9KU10sICdBVVRIX0FQSV9UT0tFTicpXG4gICAgICAgICAgICAucmVwbGFjZSgnX19BUFBfQVBJX0VORFBPSU5UX18nLCBjb25zdGFudHMuZW5kcG9pbnQgfHwgJycpXG4gICAgICAgICAgICAucmVwbGFjZSgnX19BUFBfQVVUSF9DTElFTlRfSURfXycsIGNvbnN0YW50cy5hdXRoQ2xpZW50SWQgfHwgJycpXG4gICAgICAgICAgICAucmVwbGFjZSgnX19BUFBfQVVUSF9ET01BSU5fXycsIGNvbnN0YW50cy5hdXRoRG9tYWluIHx8ICcnKTtcblxuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgY2FzZSBGU19OQU1FUy5QQUNLQUdFX0pTT046IHtcbiAgICAgICAgZnNPYmplY3RSZXBsYWNlZFtGU19OQU1FUy5QQUNLQUdFX0pTT05dID0gZnNPYmplY3RbRlNfTkFNRVMuUEFDS0FHRV9KU09OXSAmJiBmc09iamVjdFtGU19OQU1FUy5QQUNLQUdFX0pTT05dXG4gICAgICAgICAgLnJlcGxhY2UoL1wibmFtZVwiOiBcIi4qXCIvLCBgXCJuYW1lXCI6IFwiJHtjb25zdGFudHMuYXBwTmFtZX1cImApXG4gICAgICAgICAgLnJlcGxhY2UoL1widmVyc2lvblwiOiBcIi4qXCIvLCAnXCJ2ZXJzaW9uXCI6IFwiMS4wLjBcIicpO1xuXG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBjYXNlIEZTX05BTUVTLlBBQ0tBR0VfTE9DS19KU09OOiB7XG4gICAgICAgIGZzT2JqZWN0UmVwbGFjZWRbRlNfTkFNRVMuUEFDS0FHRV9MT0NLX0pTT05dID1cbiAgICAgICAgICBmc09iamVjdFtGU19OQU1FUy5QQUNLQUdFX0xPQ0tfSlNPTl0gJiYgZnNPYmplY3RbRlNfTkFNRVMuUEFDS0FHRV9MT0NLX0pTT05dXG4gICAgICAgICAgLnJlcGxhY2UoL1wibmFtZVwiOiBcIi4qXCIvLCBgXCJuYW1lXCI6IFwiJHtjb25zdGFudHMuYXBwTmFtZX1cImApXG4gICAgICAgICAgLnJlcGxhY2UoL1widmVyc2lvblwiOiBcIi4qXCIvLCAnXCJ2ZXJzaW9uXCI6IFwiMS4wLjBcIicpO1xuXG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBkZWZhdWx0OiB7XG4gICAgICAgIGZzT2JqZWN0UmVwbGFjZWRbZmlsZVBhdGhdID0gZnNPYmplY3RbZmlsZVBhdGhdICYmIGZzT2JqZWN0W2ZpbGVQYXRoXVxuICAgICAgICAgIC5yZXBsYWNlKCdfX0FQUF9BUElfRU5EUE9JTlRfXycsIGNvbnN0YW50cy5lbmRwb2ludCB8fCAnJylcbiAgICAgICAgICAucmVwbGFjZSgnX19BUFBfQVVUSF9DTElFTlRfSURfXycsIGNvbnN0YW50cy5hdXRoQ2xpZW50SWQgfHwgJycpXG4gICAgICAgICAgLnJlcGxhY2UoJ19fQVBQX0FVVEhfRE9NQUlOX18nLCBjb25zdGFudHMuYXV0aERvbWFpbiB8fCAnJylcbiAgICAgICAgICAucmVwbGFjZSgnX19BUFBfTkFNRV9fJywgY29uc3RhbnRzLmFwcE5hbWUgfHwgJycpO1xuXG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgfVxuICB9KTtcblxuICBmc09iamVjdFJlcGxhY2VkW0ZTX05BTUVTLkVJR0hUX0JBU0VfWU1MXSA9IGBhcHBOYW1lOiAke2NvbnN0YW50cy5hcHBOYW1lfWA7XG5cbiAgcmV0dXJuIGZzT2JqZWN0UmVwbGFjZWQ7XG59O1xuIl19