"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateDeleteForm = void 0;

var _schemaNameGenerator = require("@8base/schema-name-generator");

var changeCase = _interopRequireWildcard(require("change-case"));

var ejs = _interopRequireWildcard(require("ejs"));

var pluralize = _interopRequireWildcard(require("pluralize"));

var _formatCode = require("../../formatCode");

var _chunks = require("../chunks");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

/* babel-plugin-inline-import './deleteForm.js.ejs' */
// @ts-ignore
var deleteForm = "import React from 'react';\nimport gql from 'graphql-tag';\nimport { Form as FormLogic } from '@8base/forms';\nimport { Dialog, Button, ModalContext } from '@8base/boost';\nimport { graphql } from 'react-apollo';\n\nconst <%= changeCase.upper(entityName)%>_DELETE_MUTATION = gql`\n  mutation <%= changeCase.pascal(entityName)%>Delete($id: ID!) {\n    <%= SchemaNameGenerator.getDeleteItemFieldName(tableName)%>(data: { id: $id }) {\n      success\n    }\n  }\n`;\n\nconst enhancer = graphql(<%= changeCase.upper(entityName)%>_DELETE_MUTATION, {\n  name: '<%= SchemaNameGenerator.getDeleteItemFieldName(tableName)%>',\n  options: {\n    refetchQueries: ['<%=changeCase.pascal(tableName)%>TableContent', '<%= changeCase.pascal(SchemaNameGenerator.getTableListFieldName(tableName))%>'],\n    context: {\n      TOAST_SUCCESS_MESSAGE: '<%= changeCase.pascal(entityName)%> successfully deleted',\n    },\n  },\n});\n\nconst <%= changeCase.pascal(entityName)%>DeleteDialog = enhancer(\n  class <%= changeCase.pascal(entityName)%>DeleteDialog extends React.Component {\n    static contextType = ModalContext;\n\n    createOnSubmit = id => async () => {\n      await this.props.<%= SchemaNameGenerator.getDeleteItemFieldName(tableName)%>({ variables: { id } });\n\n      this.context.closeModal('<%= changeCase.upper(entityName)%>_DELETE_DIALOG_ID');\n    };\n\n    onClose = () => {\n      this.context.closeModal('<%= changeCase.upper(entityName)%>_DELETE_DIALOG_ID');\n    };\n\n    renderFormContent = ({ handleSubmit, invalid, submitting }) => (\n      <form onSubmit={handleSubmit}>\n        <Dialog.Header title=\"Delete <%= changeCase.pascal(entityName)%>\" onClose={this.onClose} />\n        <Dialog.Body scrollable>Do you really want to delete <%= changeCase.lower(entityName)%>?</Dialog.Body>\n        <Dialog.Footer>\n          <Button color=\"neutral\" variant=\"outlined\" disabled={submitting} onClick={this.onClose}>\n            Cancel\n          </Button>\n          <Button color=\"danger\" type=\"submit\" disabled={invalid} loading={submitting}>\n            Delete <%= changeCase.pascal(entityName)%>\n          </Button>\n        </Dialog.Footer>\n      </form>\n    );\n\n    renderContent = ({ args }) => {\n      return <FormLogic onSubmit={this.createOnSubmit(args.id)} formatRelationToIds>{this.renderFormContent}</FormLogic>;\n    };\n\n    render() {\n      return (\n        <Dialog id={'<%= changeCase.upper(entityName)%>_DELETE_DIALOG_ID'} size=\"sm\">\n          {this.renderContent}\n        </Dialog>\n      );\n    }\n  }\n);\n\nexport { <%= changeCase.pascal(entityName)%>DeleteDialog };\n";

var generateDeleteForm = function generateDeleteForm(_ref) {
  var tablesList = _ref.tablesList,
      tableId = _ref.tableId,
      screenName = _ref.screenName;
  var table = tablesList.find(function (_ref2) {
    var id = _ref2.id;
    return tableId === id;
  });

  if (!table) {
    throw new Error("Can't find a table with ".concat(tableId, " id"));
  }

  var tableName = table.displayName || table.name;
  var fields = table.fields.filter(function (_ref3) {
    var isMeta = _ref3.isMeta;
    return !isMeta;
  });
  var entityName = pluralize.singular(screenName || tableName);
  var tableGenerated = ejs.render(deleteForm, {
    SchemaNameGenerator: _schemaNameGenerator.SchemaNameGenerator,
    changeCase: changeCase,
    chunks: _chunks.chunks,
    entityName: entityName,
    fields: fields,
    pluralize: pluralize,
    screenName: screenName || tableName,
    tableName: tableName
  });
  return (0, _formatCode.formatCode)(tableGenerated);
};

exports.generateDeleteForm = generateDeleteForm;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9nZW5lcmF0ZUZpbGVzL2dlbmVyYXRlRGVsZXRlRm9ybS9kZWxldGVGb3JtLnRzIl0sIm5hbWVzIjpbImdlbmVyYXRlRGVsZXRlRm9ybSIsInRhYmxlc0xpc3QiLCJ0YWJsZUlkIiwic2NyZWVuTmFtZSIsInRhYmxlIiwiZmluZCIsImlkIiwiRXJyb3IiLCJ0YWJsZU5hbWUiLCJkaXNwbGF5TmFtZSIsIm5hbWUiLCJmaWVsZHMiLCJmaWx0ZXIiLCJpc01ldGEiLCJlbnRpdHlOYW1lIiwicGx1cmFsaXplIiwic2luZ3VsYXIiLCJ0YWJsZUdlbmVyYXRlZCIsImVqcyIsInJlbmRlciIsImRlbGV0ZUZvcm0iLCJTY2hlbWFOYW1lR2VuZXJhdG9yIiwiY2hhbmdlQ2FzZSIsImNodW5rcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOzs7OztBQUVBOzs7QUFHTyxJQUFNQSxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQXFCLE9BQTBEO0FBQUEsTUFBdkRDLFVBQXVELFFBQXZEQSxVQUF1RDtBQUFBLE1BQTNDQyxPQUEyQyxRQUEzQ0EsT0FBMkM7QUFBQSxNQUFsQ0MsVUFBa0MsUUFBbENBLFVBQWtDO0FBQzFGLE1BQU1DLEtBQUssR0FBR0gsVUFBVSxDQUFDSSxJQUFYLENBQWdCO0FBQUEsUUFBR0MsRUFBSCxTQUFHQSxFQUFIO0FBQUEsV0FBWUosT0FBTyxLQUFLSSxFQUF4QjtBQUFBLEdBQWhCLENBQWQ7O0FBRUEsTUFBSSxDQUFDRixLQUFMLEVBQVk7QUFBRSxVQUFNLElBQUlHLEtBQUosbUNBQXFDTCxPQUFyQyxTQUFOO0FBQTJEOztBQUV6RSxNQUFNTSxTQUFTLEdBQUdKLEtBQUssQ0FBQ0ssV0FBTixJQUFxQkwsS0FBSyxDQUFDTSxJQUE3QztBQUVBLE1BQU1DLE1BQU0sR0FBR1AsS0FBSyxDQUFDTyxNQUFOLENBQWFDLE1BQWIsQ0FBb0I7QUFBQSxRQUFHQyxNQUFILFNBQUdBLE1BQUg7QUFBQSxXQUFnQixDQUFDQSxNQUFqQjtBQUFBLEdBQXBCLENBQWY7QUFFQSxNQUFNQyxVQUFVLEdBQUdDLFNBQVMsQ0FBQ0MsUUFBVixDQUFtQmIsVUFBVSxJQUFJSyxTQUFqQyxDQUFuQjtBQUVBLE1BQU1TLGNBQWMsR0FBR0MsR0FBRyxDQUFDQyxNQUFKLENBQVdDLFVBQVgsRUFBdUI7QUFDNUNDLElBQUFBLG1CQUFtQixFQUFuQkEsd0NBRDRDO0FBRTVDQyxJQUFBQSxVQUFVLEVBQVZBLFVBRjRDO0FBRzVDQyxJQUFBQSxNQUFNLEVBQU5BLGNBSDRDO0FBSTVDVCxJQUFBQSxVQUFVLEVBQVZBLFVBSjRDO0FBSzVDSCxJQUFBQSxNQUFNLEVBQU5BLE1BTDRDO0FBTTVDSSxJQUFBQSxTQUFTLEVBQVRBLFNBTjRDO0FBTzVDWixJQUFBQSxVQUFVLEVBQUVBLFVBQVUsSUFBSUssU0FQa0I7QUFRNUNBLElBQUFBLFNBQVMsRUFBVEE7QUFSNEMsR0FBdkIsQ0FBdkI7QUFXQSxTQUFPLDRCQUFXUyxjQUFYLENBQVA7QUFDRCxDQXZCTSIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgU2NoZW1hTmFtZUdlbmVyYXRvciB9IGZyb20gJ0A4YmFzZS9zY2hlbWEtbmFtZS1nZW5lcmF0b3InO1xuaW1wb3J0ICogYXMgY2hhbmdlQ2FzZSBmcm9tICdjaGFuZ2UtY2FzZSc7XG5pbXBvcnQgKiBhcyBlanMgZnJvbSAnZWpzJztcbmltcG9ydCAqIGFzIHBsdXJhbGl6ZSBmcm9tICdwbHVyYWxpemUnO1xuaW1wb3J0IHsgZm9ybWF0Q29kZSB9IGZyb20gJy4uLy4uL2Zvcm1hdENvZGUnO1xuaW1wb3J0IHsgSUdlbmVyYXRvcnNEYXRhIH0gZnJvbSAnLi4vLi4vdHlwZXMnO1xuaW1wb3J0IHsgY2h1bmtzIH0gZnJvbSAnLi4vY2h1bmtzJztcblxuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IGRlbGV0ZUZvcm0gZnJvbSAnLi9kZWxldGVGb3JtLmpzLmVqcyc7XG5cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZURlbGV0ZUZvcm0gPSAoeyB0YWJsZXNMaXN0LCB0YWJsZUlkLCBzY3JlZW5OYW1lIH06IElHZW5lcmF0b3JzRGF0YSkgPT4ge1xuICBjb25zdCB0YWJsZSA9IHRhYmxlc0xpc3QuZmluZCgoeyBpZCB9KSA9PiB0YWJsZUlkID09PSBpZCk7XG5cbiAgaWYgKCF0YWJsZSkgeyB0aHJvdyBuZXcgRXJyb3IoYENhbid0IGZpbmQgYSB0YWJsZSB3aXRoICR7dGFibGVJZH0gaWRgKTsgfVxuXG4gIGNvbnN0IHRhYmxlTmFtZSA9IHRhYmxlLmRpc3BsYXlOYW1lIHx8IHRhYmxlLm5hbWU7XG5cbiAgY29uc3QgZmllbGRzID0gdGFibGUuZmllbGRzLmZpbHRlcigoeyBpc01ldGEgfSkgPT4gIWlzTWV0YSk7XG5cbiAgY29uc3QgZW50aXR5TmFtZSA9IHBsdXJhbGl6ZS5zaW5ndWxhcihzY3JlZW5OYW1lIHx8IHRhYmxlTmFtZSk7XG5cbiAgY29uc3QgdGFibGVHZW5lcmF0ZWQgPSBlanMucmVuZGVyKGRlbGV0ZUZvcm0sIHtcbiAgICBTY2hlbWFOYW1lR2VuZXJhdG9yLFxuICAgIGNoYW5nZUNhc2UsXG4gICAgY2h1bmtzLFxuICAgIGVudGl0eU5hbWUsXG4gICAgZmllbGRzLFxuICAgIHBsdXJhbGl6ZSxcbiAgICBzY3JlZW5OYW1lOiBzY3JlZW5OYW1lIHx8IHRhYmxlTmFtZSxcbiAgICB0YWJsZU5hbWUsXG4gIH0pO1xuXG4gIHJldHVybiBmb3JtYXRDb2RlKHRhYmxlR2VuZXJhdGVkKTtcbn07XG4iXX0=