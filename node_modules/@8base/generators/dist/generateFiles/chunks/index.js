"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.chunks = void 0;

var ejs = _interopRequireWildcard(require("ejs"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

/* babel-plugin-inline-import './createEditComponents.js.ejs' */
// @ts-ignore
var _createEditComponents = "<%\n  if(tableSelectors.hasRelationFields(table)) { \n  %><%- chunks.fieldsQueries({\n        fields: fields,\n        SchemaNameGenerator: SchemaNameGenerator,\n        changeCase: changeCase,\n    });\n  %><%}; \n%>"; // @ts-ignore

/* babel-plugin-inline-import './fieldsInputsList.js.ejs' */
var _fieldsInputsList = "<%        fields.forEach((field) => { %>\n            <Grid.Box>\n              <% if (field.fieldType === 'TEXT' && field.isList) { \n              %><FieldArray name=\"<%= field.name%>\">\n                {({ fields }) => <ListFields fields={fields} label=\"<%= field.displayName%>\" component={InputField} />}\n              </FieldArray><%\n              } else if (field.fieldType === 'TEXT') { \n                %><Field name=\"<%= field.name%>\" label=\"<%= field.displayName%>\" component={InputField} /><%\n              }else if (field.fieldType === 'NUMBER' && field.isList) { \n              %><FieldArray name=\"<%= field.name%>\">\n                {({ fields }) => <ListFields fields={fields} label=\"<%= field.displayName%>\" type=\"number\" component={InputField} />}\n              </FieldArray><%\n              } else if (field.fieldType === 'NUMBER') { \n                %><Field name=\"<%= field.name%>\" label=\"<%= field.displayName%>\" type=\"number\" component={InputField} /><%\n              } else if (field.fieldType === 'SWITCH' && field.fieldTypeAttributes.format === 'CUSTOM') { \n                %><Field\n                name=\"<%= field.name%>\"\n                label=\"<%= field.displayName%>\"\n                multiple={<%= field.isList%>}\n                component={SelectField}\n                options={[\n                <% field.fieldTypeAttributes.listOptions.map(option => {\n                  %>  { label: '<%= changeCase.pascal(option)%>', value: '<%= option%>' },\n                <%});\n            %>]}\n              /><%\n              } else if (field.fieldType === 'SWITCH' && field.isList) { \n              %><FieldArray name=\"<%= field.name%>\">\n                {({ fields }) => (\n                  <ListFields fields={fields} name=\"<%= field.name%>\" label=\"<%= field.displayName%>\" component={CheckboxField} />\n                )}\n              </FieldArray><%\n              } else if (field.fieldType === 'SWITCH') { \n                %><Field name=\"<%= field.name%>\" label=\"<%= field.displayName%>\" component={CheckboxField} /><%\n              } else if (field.fieldType === 'DATE' && field.isList) { \n              %><FieldArray name=\"<%= field.name%>\">\n                {({ fields }) => (\n                  <ListFields fields={fields} label=\"<%= field.displayName%>\" withTime={<%= field.fieldTypeAttributes.format==='DATETIME'%>} component={DateInputField} />\n                )}\n              </FieldArray><%\n              } else if (field.fieldType === 'DATE') {\n                %><Field name=\"<%= field.name%>\" label=\"<%= field.displayName%>\" withTime={<%= field.fieldTypeAttributes.format==='DATETIME'%>} component={DateInputField} /><%\n              }else if (field.fieldType === 'FILE' && field.isList) { \n              %><FieldArray name=\"<%= field.name%>\">\n                {({ fields }) => <ListFields fields={fields} label=\"<%= field.displayName%>\" component={FileInputField} />}\n              </FieldArray><%\n              } else if (field.fieldType === 'FILE') { \n                %><Field name=\"<%= field.name%>\" label=\"<%= field.displayName%>\" component={FileInputField} /><%\n              } else if (field.fieldType === 'SMART' && field.fieldTypeAttributes.format === 'ADDRESS' && field.isList) { \n                %><FieldArray name=\"<%= field.name%>\">\n                {({ fields }) => <ListFields fields={fields} label=\"<%= field.displayName%>\" component={AddressInputField} />}\n              </FieldArray><%\n              } else if (field.fieldType === 'SMART' && field.fieldTypeAttributes.format === 'ADDRESS') { \n                %><Field name=\"<%= field.name%>\" label=\"<%= field.displayName%>\" component={AddressInputField} /><%\n              } else if (field.fieldType === 'SMART' && field.fieldTypeAttributes.format === 'PHONE' && field.isList) { \n                %><FieldArray name=\"<%= field.name%>\">\n                {({ fields }) => <ListFields fields={fields} label=\"<%= field.displayName%>\" component={PhoneInputField} />}\n              </FieldArray><%\n              } else if (field.fieldType === 'SMART' && field.fieldTypeAttributes.format === 'PHONE') { \n                %><Field name=\"<%= field.name%>\" label=\"<%= field.displayName%>\" component={PhoneInputField} /><%\n              } else if (field.fieldType === 'RELATION') {\n                %><Query query={<%= changeCase.upper(field.name)%>_LIST_QUERY}>\n                {({ data, loading }) => (\n                  <Field\n                    name=\"<%= field.name%>\"\n                    label=\"<%= field.displayName%>\"\n                    multiple={<%= field.isList%>}\n                    component={SelectField}\n                    placeholder=\"Select a <%= changeCase.lower(pluralize.singular(field.name))%>\"\n                    loading={loading}\n                    options={loading ? [] : getRelationOptions(data.<%= SchemaNameGenerator.getTableListFieldName(field.name)%>.items)}\n                    stretch\n                  />\n                )}\n              </Query><%\n              } %>\n            </Grid.Box><% \n          }); %>"; // @ts-ignore

/* babel-plugin-inline-import './fieldsQueries.js.ejs' */
var _fieldsQueries = "<% fields.forEach(function({ fieldType, name, relation }){\n  if(fieldType === 'RELATION') {\n%>const <%= changeCase.upper(name)%>_LIST_QUERY = gql`\n  query <%= changeCase.pascal(SchemaNameGenerator.getTableListFieldName(name))%> {\n    <%= SchemaNameGenerator.getTableListFieldName(name)%>: <%=SchemaNameGenerator.getTableListFieldName(relation.refTable.name)%> {\n      items {\n        id\n        _description\n      }\n    }\n  }\n`;\n<% \n  }\n});\n%>\nconst getRelationOptions = (items = []) => items.map(item => ({ value: item.id, label: item._description || 'Untitled Record' }));\n"; // @ts-ignore

/* babel-plugin-inline-import './routeComponent.js.ejs' */
var _routeComponent = "<ProtectedRoute exact path=\"<%= routeUrl%>\" component={<%= changeCase.pascal(screenName)%>} />"; // @ts-ignore

/* babel-plugin-inline-import './routeImport.js.ejs' */
var _routeImport = "import { <%= changeCase.pascal(screenName)%> } from './routes/<%= changeCase.camel(screenName)%>';"; // @ts-ignore

/* babel-plugin-inline-import './routeLink.js.ejs' */
var _routeLink = "<Nav.Item to=\"<%= routeUrl %>\" label=\"<%= changeCase.pascal(screenName)%>\" />";
var chunks = {
  createEditComponents: function createEditComponents(data) {
    return ejs.render(_createEditComponents, data);
  },
  fieldsInputsList: function fieldsInputsList(data) {
    return ejs.render(_fieldsInputsList, data);
  },
  fieldsQueries: function fieldsQueries(data) {
    return ejs.render(_fieldsQueries, data);
  },
  routeComponent: function routeComponent(data) {
    return ejs.render(_routeComponent, data);
  },
  routeImport: function routeImport(data) {
    return ejs.render(_routeImport, data);
  },
  routeLink: function routeLink(data) {
    return ejs.render(_routeLink, data);
  }
};
exports.chunks = chunks;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9nZW5lcmF0ZUZpbGVzL2NodW5rcy9pbmRleC50cyJdLCJuYW1lcyI6WyJjaHVua3MiLCJjcmVhdGVFZGl0Q29tcG9uZW50cyIsImRhdGEiLCJlanMiLCJyZW5kZXIiLCJmaWVsZHNJbnB1dHNMaXN0IiwiZmllbGRzUXVlcmllcyIsInJvdXRlQ29tcG9uZW50Iiwicm91dGVJbXBvcnQiLCJyb3V0ZUxpbmsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7QUFFQTt5UEFFQTs7O29sS0FFQTs7O3ltQkFFQTs7OzBIQUVBOzs7eUhBRUE7Ozs7QUFHTyxJQUFNQSxNQUFNLEdBQUc7QUFDcEJDLEVBQUFBLG9CQUFvQixFQUFFLDhCQUFDQyxJQUFEO0FBQUEsV0FBbUNDLEdBQUcsQ0FBQ0MsTUFBSixDQUFXSCxxQkFBWCxFQUFpQ0MsSUFBakMsQ0FBbkM7QUFBQSxHQURGO0FBRXBCRyxFQUFBQSxnQkFBZ0IsRUFBRSwwQkFBQ0gsSUFBRDtBQUFBLFdBQW1DQyxHQUFHLENBQUNDLE1BQUosQ0FBV0MsaUJBQVgsRUFBNkJILElBQTdCLENBQW5DO0FBQUEsR0FGRTtBQUdwQkksRUFBQUEsYUFBYSxFQUFFLHVCQUFDSixJQUFEO0FBQUEsV0FBbUNDLEdBQUcsQ0FBQ0MsTUFBSixDQUFXRSxjQUFYLEVBQTBCSixJQUExQixDQUFuQztBQUFBLEdBSEs7QUFJcEJLLEVBQUFBLGNBQWMsRUFBRSx3QkFBQ0wsSUFBRDtBQUFBLFdBQW1DQyxHQUFHLENBQUNDLE1BQUosQ0FBV0csZUFBWCxFQUEyQkwsSUFBM0IsQ0FBbkM7QUFBQSxHQUpJO0FBS3BCTSxFQUFBQSxXQUFXLEVBQUUscUJBQUNOLElBQUQ7QUFBQSxXQUFtQ0MsR0FBRyxDQUFDQyxNQUFKLENBQVdJLFlBQVgsRUFBd0JOLElBQXhCLENBQW5DO0FBQUEsR0FMTztBQU1wQk8sRUFBQUEsU0FBUyxFQUFFLG1CQUFDUCxJQUFEO0FBQUEsV0FBbUNDLEdBQUcsQ0FBQ0MsTUFBSixDQUFXSyxVQUFYLEVBQXNCUCxJQUF0QixDQUFuQztBQUFBO0FBTlMsQ0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGVqcyBmcm9tICdlanMnO1xuXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgY3JlYXRlRWRpdENvbXBvbmVudHMgZnJvbSAnLi9jcmVhdGVFZGl0Q29tcG9uZW50cy5qcy5lanMnO1xuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IGZpZWxkc0lucHV0c0xpc3QgZnJvbSAnLi9maWVsZHNJbnB1dHNMaXN0LmpzLmVqcyc7XG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgZmllbGRzUXVlcmllcyBmcm9tICcuL2ZpZWxkc1F1ZXJpZXMuanMuZWpzJztcbi8vIEB0cy1pZ25vcmVcbmltcG9ydCByb3V0ZUNvbXBvbmVudCBmcm9tICcuL3JvdXRlQ29tcG9uZW50LmpzLmVqcyc7XG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgcm91dGVJbXBvcnQgZnJvbSAnLi9yb3V0ZUltcG9ydC5qcy5lanMnO1xuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IHJvdXRlTGluayBmcm9tICcuL3JvdXRlTGluay5qcy5lanMnO1xuXG5leHBvcnQgY29uc3QgY2h1bmtzID0ge1xuICBjcmVhdGVFZGl0Q29tcG9uZW50czogKGRhdGE/OiB7IFtrZXk6IHN0cmluZ106IGFueSB9KSA9PiBlanMucmVuZGVyKGNyZWF0ZUVkaXRDb21wb25lbnRzLCBkYXRhKSxcbiAgZmllbGRzSW5wdXRzTGlzdDogKGRhdGE/OiB7IFtrZXk6IHN0cmluZ106IGFueSB9KSA9PiBlanMucmVuZGVyKGZpZWxkc0lucHV0c0xpc3QsIGRhdGEpLFxuICBmaWVsZHNRdWVyaWVzOiAoZGF0YT86IHsgW2tleTogc3RyaW5nXTogYW55IH0pID0+IGVqcy5yZW5kZXIoZmllbGRzUXVlcmllcywgZGF0YSksXG4gIHJvdXRlQ29tcG9uZW50OiAoZGF0YT86IHsgW2tleTogc3RyaW5nXTogYW55IH0pID0+IGVqcy5yZW5kZXIocm91dGVDb21wb25lbnQsIGRhdGEpLFxuICByb3V0ZUltcG9ydDogKGRhdGE/OiB7IFtrZXk6IHN0cmluZ106IGFueSB9KSA9PiBlanMucmVuZGVyKHJvdXRlSW1wb3J0LCBkYXRhKSxcbiAgcm91dGVMaW5rOiAoZGF0YT86IHsgW2tleTogc3RyaW5nXTogYW55IH0pID0+IGVqcy5yZW5kZXIocm91dGVMaW5rLCBkYXRhKSxcbn07XG4iXX0=