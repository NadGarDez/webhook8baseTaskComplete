export declare const USER_REFRESH_TOKEN_QUERY = "\n  mutation UserRefreshToken($refreshToken: String!, $email: String!) {\n    userRefreshToken(data: {\n      refreshToken: $refreshToken,\n      email: $email,\n    }) {\n      refreshToken\n      idToken\n    }\n  }\n";
export declare const TABLES_LIST_QUERY = "\n  query TableList($filter: TableListFilter) {\n    tablesList(filter: $filter) {\n      items {\n        ...TableFragment\n      }\n    }\n  }\n\n  fragment TableFragment on Table {\n    id\n    name\n    displayName\n    isSystem\n    fields {\n      ...TableFieldFragment\n    }\n  }\n\n  fragment TableFieldFragment on TableField {\n    ...CommonTableFieldFragment\n    fieldTypeAttributes {\n      ...TextFieldTypeAttributes\n      ...NumberFieldTypeAttributes\n      ...FileFieldTypeAttributes\n      ...DateFieldTypeAttributes\n      ...SwitchFieldTypeAttributes\n      ...SmartFieldTypesAttributes\n    }\n  }\n\n  fragment CommonTableFieldFragment on TableField {\n    id\n    name\n    displayName\n    description\n    fieldType\n    fieldTypeAttributes {\n      ...TextFieldTypeAttributes\n      ...NumberFieldTypeAttributes\n      ...FileFieldTypeAttributes\n      ...DateFieldTypeAttributes\n      ...SwitchFieldTypeAttributes\n    }\n    isList\n    isRequired\n    isUnique\n    defaultValue\n    isSystem\n    isMeta\n    relation {\n      refFieldName\n      refFieldDisplayName\n      relationTableName\n      relationFieldName\n      refTable {\n        id\n        name\n      }\n      refFieldIsList\n      refFieldIsRequired\n    }\n  }\n\n  fragment DateFieldTypeAttributes on DateFieldTypeAttributes {\n    format\n  }\n\n  fragment TextFieldTypeAttributes on TextFieldTypeAttributes {\n    format\n    fieldSize\n  }\n\n  fragment NumberFieldTypeAttributes on NumberFieldTypeAttributes {\n    format\n    precision\n    currency\n    minValue\n    maxValue\n    isBigInt\n  }\n\n  fragment FileFieldTypeAttributes on FileFieldTypeAttributes {\n    format\n    maxSize\n    typeRestrictions\n  }\n\n  fragment SmartFieldTypesAttributes on SmartFieldTypeAttributes {\n    format\n    innerFields {\n      name\n      displayName\n      description\n      fieldType\n      isList\n      isRequired\n      isUnique\n      fieldTypeAttributes {\n        ...TextFieldTypeAttributes\n        ...NumberFieldTypeAttributes\n        ...FileFieldTypeAttributes\n        ...DateFieldTypeAttributes\n        ...SwitchFieldTypeAttributes\n      }\n    }\n  }\n\n  fragment SwitchFieldTypeAttributes on SwitchFieldTypeAttributes {\n    format\n    listOptions\n  }\n";
export declare const TABLE_CREATE_MUTATION = "\n  mutation TableCreate($data: TableCreateInput!) {\n    tableCreate(data: $data) {\n      id\n    }\n  }\n";
export declare const FIELD_CREATE_MUTATION = "\n  mutation FieldCreate($data: TableFieldCreateInput!) {\n    fieldCreate(data: $data) {\n      id\n    }\n  }\n";
export declare const USER_QUERY = "\n  query User {\n    user {\n      id\n    }\n  }\n";
export declare const FILE_UPLOAD_INFO_QUERY = "\n  query FileUploadInfo {\n    fileUploadInfo {\n      apiKey\n      policy\n      signature\n      path\n    }\n  }\n";
//# sourceMappingURL=constants.d.ts.map