"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const translations_1 = require("../../../../common/translations");
const Extensions_1 = require("../../../../interfaces/Extensions");
const projectController_1 = require("../../../controllers/projectController");
exports.default = {
    command: 'plugin <name>',
    handler: (params, context) => __awaiter(this, void 0, void 0, function* () {
        let { name, syntax, silent } = params;
        projectController_1.ProjectController.generatePlugin(context, {
            name,
            syntax,
        });
    }),
    describe: translations_1.translations.i18n.t('generate_plugin_describe'),
    builder: (args) => args
        .usage(translations_1.translations.i18n.t('generate_plugin_usage'))
        .option('syntax', {
        alias: 's',
        describe: translations_1.translations.i18n.t('generate_syntax_describe'),
        default: 'ts',
        type: 'string',
        choices: Object.values(Extensions_1.SyntaxType),
    })
        .option('silent', {
        describe: translations_1.translations.i18n.t('silent_describe'),
        default: false,
        type: 'boolean',
    }),
};
//# sourceMappingURL=plugin.js.map