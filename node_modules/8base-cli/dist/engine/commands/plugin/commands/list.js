"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = require("chalk");
const _ = require("lodash");
const graphql_request_1 = require("graphql-request");
const translations_1 = require("../../../../common/translations");
const PLUGINS_LIST_QUERY = `
  query PluginsList($q: String) {
    pluginsList(filter: { OR: { name: { contains: $q }, description: { contains: $q }, _fullText: $q } }) {
      items {
        name
        description
        gitHubUrl
      }
    }
  }
`;
exports.default = {
    command: 'list',
    handler: (params, context) => __awaiter(this, void 0, void 0, function* () {
        const { q } = params;
        let plugins = yield graphql_request_1.request('https://api.8base.com/ck16gpwki001f01jgh4kvd54j', PLUGINS_LIST_QUERY, { q });
        plugins = _.get(plugins, ['pluginsList', 'items']);
        if (Array.isArray(plugins) && plugins.length > 0) {
            plugins.forEach(({ name, description, gitHubUrl }) => {
                context.logger.info(context.i18n.t('plugin_list_plugin_info', { name: chalk_1.default.green(name), description, gitHubUrl }));
            });
        }
        else {
            context.logger.info(context.i18n.t('plugin_list_not_found_plugins'));
        }
    }),
    describe: translations_1.translations.i18n.t('plugin_list_describe'),
    builder: (args) => args.usage(translations_1.translations.i18n.t('plugin_list_usage')).option('query', {
        alias: 'q',
        type: 'string',
    }),
};
//# sourceMappingURL=list.js.map