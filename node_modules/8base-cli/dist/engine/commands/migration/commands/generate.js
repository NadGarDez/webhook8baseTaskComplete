"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const translations_1 = require("../../../../common/translations");
const GraphqlActions_1 = require("../../../../consts/GraphqlActions");
const download = require("download");
const config_1 = require("../../../../config");
const configuraion_1 = require("../../../../common/configuraion");
const path = require('path');
const fs = require('fs-extra');
const DEFAULT_MIGRATIONS_PATH = './migrations';
exports.default = {
    command: 'generate',
    handler: (params, context) => __awaiter(this, void 0, void 0, function* () {
        configuraion_1.ProjectConfigurationState.expectHasProject(context);
        context.spinner.start(context.i18n.t('migration_generate_in_progress'));
        const dist = params.dist || DEFAULT_MIGRATIONS_PATH;
        const { system } = yield context.request(GraphqlActions_1.GraphqlActions.migrationGenerate, { tables: params.tables }, { customEnvironment: params.environment });
        yield download(system.ciGenerate.url, path.join(config_1.StaticConfig.rootExecutionDir, dist), { extract: true });
        context.spinner.stop();
    }),
    describe: translations_1.translations.i18n.t('migration_generate_describe'),
    builder: (args) => args
        .usage(translations_1.translations.i18n.t('migration_generate_usage'))
        .option('dist', {
        describe: translations_1.translations.i18n.t('migration_generate_dist_describe'),
        type: 'string',
        default: String(DEFAULT_MIGRATIONS_PATH),
    })
        .option('tables', {
        alias: 't',
        describe: translations_1.translations.i18n.t('migration_generate_tables_describe'),
        type: 'array',
    })
        .option('environment', {
        alias: 'e',
        describe: translations_1.translations.i18n.t('migration_generate_environment_describe'),
        type: 'string',
    }),
};
//# sourceMappingURL=generate.js.map