"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const jwtDecode = require("jwt-decode");
const chalk_1 = require("chalk");
const translations_1 = require("../../../common/translations");
const StorageParameters_1 = require("../../../consts/StorageParameters");
exports.default = {
    command: 'whoami',
    handler: (params, context) => __awaiter(this, void 0, void 0, function* () {
        if (!context.user.isAuthorized()) {
            throw new Error(context.i18n.t('logout_error'));
        }
        let email, name;
        try {
            const idToken = context.storage.getValue(StorageParameters_1.StorageParameters.idToken);
            ({ email, name } = jwtDecode(idToken));
        }
        catch (e) { }
        if (!email && context.isProjectDir()) {
            try {
                const { user } = yield context.request('{ user { email firstName lastName }}');
                email = user.email;
                name = `${user.firstName} ${user.lastName}`;
            }
            catch (e) { }
        }
        context.logger.info(translations_1.translations.i18n.t('whoami_text', { email: chalk_1.default.green(email), name }));
    }),
    describe: translations_1.translations.i18n.t('whoami_describe'),
    builder: (args) => {
        return args.usage(translations_1.translations.i18n.t('whoami_usage'));
    },
};
//# sourceMappingURL=index.js.map